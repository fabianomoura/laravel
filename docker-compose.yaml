version: '3'

services:
  app:
    build: .
    container_name: app
    # entrypoint: dockerize -template ./.docker/app/.env:.env    
    # environment:
    #   - DB_HOST=db
    #   - DB_DATABASE=laravel
    #   - DB_USERNAME=root
    #   - DB_PASSWORD=root
    volumes:
      - .:/var/www
    networks:
      - app-network
    depends_on:
      - db
      # db:
      #   condition: service_healthy

  nginx:
    build: .docker/nginx
    container_name: nginx
    restart: always
    tty: true
    ports:
      - "8000:80"
    volumes:
      - .:/var/www
    networks:
      - app-network

  db:
    build: .docker/mysql
    command: --innodb-use-native-aio=0
    container_name: db
    restart: always
    tty: true
    ports:
      - "3306:3306"
    volumes:
      - ./.docker/dbdata:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=laravel
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=root
    networks: 
      - app-network
    # healthcheck:
    #   test: ["CMD-SHELL", 'mysql -uroot --database=laravel --password=root --execute="SELECT count(table_name) > 0 FROM information_schema.tables;" --skip-column-names -B']
    #   interval: 10s
    #   timeout: 10s
    #   retries: 10
  
  redis:
    image: redis:alpine
    expose:
      - 6379
    networks: 
      - app-network

networks:
  app-network:
    driver: bridge  